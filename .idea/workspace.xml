<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="88000d0a-0bae-485f-8ce6-22a15ed977fe" name="Alterações" comment="feat(api): implementar operações CRUD para estudantes e professores&#10;&#10;- Criado StudentsController e TeachersController para lidar com requisições relacionadas a estudantes e professores.&#10;- Adicionados endpoints para criar, atualizar, recuperar e deletar estudantes e professores.&#10;- Adicionada validação utilizando Zod para os dados de entrada em ambos os controladores.&#10;- Integrada documentação Swagger para melhor visibilidade da API.&#10;- Atualizado app.module.ts para incluir StudentsModule e TeachersModule.&#10;- Aprimorado o tratamento de erros nos controladores para retornar os códigos de status HTTP apropriados.&#10;- Atualizados os schemas de estudantes e professores para incluir tipos de entrada sem os campos de role.&#10;- Modificado api.http para incluir os novos endpoints de criação de professores.">
      <change afterPath="$PROJECT_DIR$/libs/enums/src/gender.enum.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/enums/src/level-of-education.enum.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/enums/src/race.enum.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/enums/src/special-categories.enum.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dictionaries/project.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dictionaries/project.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api.http" beforeDir="false" afterPath="$PROJECT_DIR$/api.http" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/api/src/schools/schools.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/api/src/schools/schools.controller.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/schools-service/src/schools/schools.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/schools-service/src/schools/schools.controller.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/schools-service/src/schools/schools.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/schools-service/src/schools/schools.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/students-service/prisma/schema.prisma" beforeDir="false" afterPath="$PROJECT_DIR$/apps/students-service/prisma/schema.prisma" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/students-service/src/app.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/students-service/src/app.controller.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/students-service/src/app.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/students-service/src/app.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/teachers-service/prisma/schema.prisma" beforeDir="false" afterPath="$PROJECT_DIR$/apps/teachers-service/prisma/schema.prisma" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/teachers-service/src/app.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/teachers-service/src/app.controller.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/teachers-service/src/app.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/teachers-service/src/app.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/teachers-service/src/app.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/teachers-service/src/app.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/users-service/src/app.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/apps/users-service/src/app.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/libs/enums/src/main.ts" beforeDir="false" afterPath="$PROJECT_DIR$/libs/enums/src/main.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/libs/schemas/src/User/student/student.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/libs/schemas/src/User/student/student.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/libs/schemas/src/User/teacher/teacher.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/libs/schemas/src/User/teacher/teacher.schema.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dockerfile" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="vinniciusolliveiracostaa &lt;vinnicius.olliveira.costaa@outlook.com.br&gt;" />
      </list>
    </option>
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="development" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;vinniciusolliveiracostaa&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/vinniciusolliveiracostaa/obg-plataforma.git&quot;,
    &quot;accountId&quot;: &quot;b41ae52d-a9de-4f05-9b50-2adbc13735c5&quot;
  }
}</component>
  <component name="OptimizeOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2wvTWnPzy44szK8xtpYczE41K0v" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Docker.api/Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.nats: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.postgres: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.redis: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.api | #14.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.api | #2.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.api | #7.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.api | #8.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.api | Atualizar Escola.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.api | Atualizar Usuário.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.api | Autenticação.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.api | Escolas.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.api | Obter Escola por CUID.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.api | Obter Escolas.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.api | Obter Usuário por ID.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.api | Obter Usuários.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.api | Profile.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.api | Schools.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.api | Upload Escolas via CSV.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.api | Usuários.executor&quot;: &quot;Run&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;Node.js.schools-csv.service.ts.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;code.cleanup.on.save&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;development&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;javascript.nodejs.core.library.configured.version&quot;: &quot;23.11.0&quot;,
    &quot;javascript.nodejs.core.library.typings.version&quot;: &quot;22.15.21&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/vinni/Desktop/Projetos/OBG/Desenvolvimento/obg-plataforma/apps/students-service/src&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.standard&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.standard&quot;: &quot;&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_interpreter_path&quot;: &quot;/usr/bin/node&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;/usr/bin/pnpm&quot;,
    &quot;npm.build.executor&quot;: &quot;Run&quot;,
    &quot;npm.dev.executor&quot;: &quot;Run&quot;,
    &quot;prettierjs.PrettierConfiguration.Package&quot;: &quot;/home/vinni/Desktop/Projetos/OBG/Desenvolvimento/obg-plataforma/node_modules/prettier&quot;,
    &quot;rearrange.code.on.save&quot;: &quot;true&quot;,
    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;settings.nodejs&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/home/vinni/Desktop/Projetos/OBG/Desenvolvimento/obg-plataforma/node_modules/typescript/lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File&quot;: [
      &quot;TypeScript&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/apps/students-service/src" />
      <recent name="C:\Users\vinni\WebstormProjects\obg-plataforma\apps\users-service" />
      <recent name="C:\Users\vinni\WebstormProjects\obg-plataforma\apps\teachers-service" />
      <recent name="C:\Users\vinni\WebstormProjects\obg-plataforma\apps\students-service" />
      <recent name="$PROJECT_DIR$/apps/api/src/guards" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/apps/api/src/strategies" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/apps/web/src/app/(private)/(dashboard)/schools/components/data-table" />
      <recent name="$PROJECT_DIR$/apps/web/src/app/(private)/(dashboard)/schools/.components/data-table" />
      <recent name="$PROJECT_DIR$/apps/web/src/app/(private)/(dashboard)" />
    </key>
  </component>
  <component name="RunManager" selected="HTTP Request.api | Obter Escolas">
    <configuration name="api | Autenticação" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/api.http" executionIdentifier="Autenticação" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="api | Escolas" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/api.http" executionIdentifier="Escolas" index="8" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="api | Obter Escolas" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/api.http" executionIdentifier="Obter Escolas" index="9" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="api | Profile" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/api.http" executionIdentifier="Profile" index="2" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="api | Usuários" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/api.http" executionIdentifier="Usuários" index="3" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.api | Obter Escolas" />
        <item itemvalue="HTTP Request.api | Autenticação" />
        <item itemvalue="HTTP Request.api | Escolas" />
        <item itemvalue="HTTP Request.api | Profile" />
        <item itemvalue="HTTP Request.api | Usuários" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-6a121458b545-JavaScript-WS-251.25410.117" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Tarefa padrão">
      <changelist id="88000d0a-0bae-485f-8ce6-22a15ed977fe" name="Alterações" comment="" />
      <created>1746921081868</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1746921081868</updated>
      <workItem from="1746921083322" duration="11502000" />
      <workItem from="1747214506963" duration="13000" />
      <workItem from="1747670824675" duration="1241000" />
      <workItem from="1747672079401" duration="3593000" />
      <workItem from="1747678312342" duration="717000" />
      <workItem from="1747693119045" duration="27056000" />
      <workItem from="1747741461129" duration="17527000" />
      <workItem from="1747787969216" duration="66000" />
      <workItem from="1747797405235" duration="10117000" />
      <workItem from="1747840577558" duration="13000" />
      <workItem from="1747840640252" duration="131000" />
      <workItem from="1747840782291" duration="18000" />
      <workItem from="1747840809203" duration="1404000" />
      <workItem from="1747842848383" duration="339000" />
      <workItem from="1747846187735" duration="2160000" />
      <workItem from="1747848530686" duration="1273000" />
      <workItem from="1747849824977" duration="619000" />
      <workItem from="1747919605058" duration="10000" />
      <workItem from="1747924415856" duration="17244000" />
      <workItem from="1747945328772" duration="52399000" />
      <workItem from="1748071561597" duration="8627000" />
      <workItem from="1748084005967" duration="356000" />
      <workItem from="1748084374318" duration="476000" />
      <workItem from="1748187729045" duration="3147000" />
      <workItem from="1748211687639" duration="3449000" />
      <workItem from="1748261371657" duration="8778000" />
      <workItem from="1748276964726" duration="893000" />
      <workItem from="1748286286033" duration="617000" />
      <workItem from="1748286916371" duration="10417000" />
      <workItem from="1748351602415" duration="933000" />
      <workItem from="1748536523236" duration="13046000" />
      <workItem from="1748554312290" duration="5736000" />
    </task>
    <task id="LOCAL-00001" summary="feat(dashboard): adicione páginas de painel para análises, escolas, configurações, alunos, professores, equipes e usuários">
      <option name="closed" value="true" />
      <created>1747672174435</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1747672174435</updated>
    </task>
    <task id="LOCAL-00002" summary="feat: adicionar recursos de gerenciamento escolar com tabela de dados e validação de esquema">
      <option name="closed" value="true" />
      <created>1747738894181</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1747738894181</updated>
    </task>
    <task id="LOCAL-00003" summary="feat: implementar CORS para permitir origens específicas e melhorar a segurança da API">
      <option name="closed" value="true" />
      <created>1747738932388</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1747738932388</updated>
    </task>
    <task id="LOCAL-00004" summary="feat: ajustar estado total na tabela de dados e atualizar saídas de build no Turbo">
      <option name="closed" value="true" />
      <created>1747739594136</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1747739594136</updated>
    </task>
    <task id="LOCAL-00005" summary="fix(data-table): remover aviso de variável não utilizada para estado total">
      <option name="closed" value="true" />
      <created>1747830154043</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1747830154043</updated>
    </task>
    <task id="LOCAL-00006" summary="refactor: atualizar importações de esquema para usar @obg/schemas e ajustar tipos relacionados">
      <option name="closed" value="true" />
      <created>1747976698427</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1747976698427</updated>
    </task>
    <task id="LOCAL-00007" summary="feat: adicione o arquivo .gitignore para excluir artefatos de construção, logs e arquivos de ambiente">
      <option name="closed" value="true" />
      <created>1747978020905</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1747978020905</updated>
    </task>
    <task id="LOCAL-00008" summary="feat: update Dockerfile to include package.json from libs and modify pnpm-workspace.yaml dependencies">
      <option name="closed" value="true" />
      <created>1747979263278</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1747979263278</updated>
    </task>
    <task id="LOCAL-00009" summary="fix: update zod version to 3.25.23 in pnpm-lock.yaml">
      <option name="closed" value="true" />
      <created>1747979477423</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1747979477423</updated>
    </task>
    <task id="LOCAL-00010" summary="feat: adicionar biblioteca de estratégias com configuração TypeScript e importação de reflect-metadata&#10;&#10;- Criado arquivo main.ts na biblioteca de estratégias para importar 'reflect-metadata'.&#10;- Adicionado tsconfig.json com opções do compilador TypeScript, incluindo suporte a decorators e metadata.&#10;- Criado tsconfig.lib.json estendendo o tsconfig principal com configurações específicas da biblioteca.&#10;- Atualizado pnpm-lock.yaml para incluir dependências da nova biblioteca de estratégias, incluindo pacotes do NestJS e reflect-metadata.&#10;- adicionar módulos de autenticação e gerenciamento de usuários com esquemas e controladores.">
      <option name="closed" value="true" />
      <created>1748043079573</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1748043079573</updated>
    </task>
    <task id="LOCAL-00011" summary="feat: implementar autenticação com JWT e estratégia local, incluindo validação de usuário e tratamento de solicitações">
      <option name="closed" value="true" />
      <created>1748059987553</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1748059987553</updated>
    </task>
    <task id="LOCAL-00012" summary="feat: autenticação parcialmente termina, JWT, Guards e Passport Strategies, proteção nos endpoints da api, decorator IsPublic para poder uma rota ser acessada externamente">
      <option name="closed" value="true" />
      <created>1748078683103</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1748078683103</updated>
    </task>
    <task id="LOCAL-00013" summary="feat: atualizar README.md com detalhes do projeto, tecnologias, arquitetura e instruções de configuração para OBG Plataforma">
      <option name="closed" value="true" />
      <created>1748083386623</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1748083386623</updated>
    </task>
    <task id="LOCAL-00014" summary="feat: adicionando comandos Prisma ao package.json para migração e implantação">
      <option name="closed" value="true" />
      <created>1748214276458</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1748214276458</updated>
    </task>
    <task id="LOCAL-00015" summary="feat: adicionando comandos Prisma ao package.json para migração e implantação">
      <option name="closed" value="true" />
      <created>1748214346663</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1748214346663</updated>
    </task>
    <task id="LOCAL-00016" summary="fix: remove outdated Prisma version from pnpm-lock.yaml">
      <option name="closed" value="true" />
      <created>1748214637550</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1748214637550</updated>
    </task>
    <task id="LOCAL-00017" summary="feat: adicionar mapeamento da biblioteca core do Node.js e atualizar configurações do workspace&#10;&#10;feat: atualizar README.md com detalhes do projeto, tecnologias, arquitetura e instruções de configuração&#10;&#10;fix: corrigir requisições na api.http com valores corretos de email e role&#10;&#10;refactor: alterar UserSchemaType para BaseUserDto no controller e serviço de autenticação&#10;&#10;refactor: atualizar controller de usuários para usar os novos schemas e DTOs base&#10;&#10;feat: implementar novos schemas de usuário (admin, professor e aluno) com validação de role&#10;&#10;refactor: remover schemas antigos de aluno e professor, e consolidar schemas de usuário&#10;&#10;fix: atualizar main.ts para exportar os novos schemas e tipos de usuário&#10;&#10;chore: atualizar dependência do zod para a versão 3.25.28">
      <option name="closed" value="true" />
      <created>1748293651884</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1748293651884</updated>
    </task>
    <task id="LOCAL-00018" summary="feat(api): atualizar criação de usuário e atribuição de cargo nas requisições da API&#10;&#10;- Alterado o e-mail de &quot;teste3@teste.com&quot; para &quot;teste5@teste.com&quot; na requisição da API.&#10;- Atualizado o cargo do usuário de &quot;ADMIN&quot; para &quot;TEACHER&quot; e adicionado campo CPF na criação do usuário.&#10;&#10;chore(api): reorganizar dependências do pacote&#10;&#10;- Movidas as dependências @obg para uma ordem mais estruturada no package.json.&#10;- Adicionada dependência express-session para gerenciamento de sessões.&#10;&#10;refactor(auth): simplificar processo de login&#10;&#10;- Removido console.log desnecessário no método de login.&#10;- Simplificada a lógica de autenticação do usuário.&#10;&#10;fix(guards): comentar lógica de login via sessão&#10;&#10;- Comentada a chamada ao logIn no LocalAuthGuard para tornar o gerenciamento de sessão opcional.&#10;&#10;feat(users): aprimorar lógica de criação de usuários&#10;&#10;- Atualizada a lógica de criação de usuários para usar CreateBaseUserDto.&#10;- Emitido evento de criação de usuário após sucesso na criação.&#10;&#10;feat(students-service): implementar tratamento básico de eventos&#10;&#10;- Criado AppController para lidar com eventos relacionados a usuários no serviço de estudantes.&#10;- Adicionados padrões de eventos para criação e recuperação de usuários.&#10;&#10;feat(teachers-service): adicionar tratamento de eventos para ações de professores&#10;&#10;- Criado AppController para lidar com eventos relacionados a professores.&#10;- Implementados padrões de eventos para ações de professores.&#10;&#10;fix(users-service): atualizar serviço de usuários para lidar com novos DTOs&#10;&#10;- Refatorados métodos do serviço de usuários para usar CreateBaseUserDto e UpdateBaseUserDto.&#10;- Integrada comunicação via NATS no serviço de usuários.&#10;&#10;refactor(decorators): atualizar decorator de usuário atual&#10;&#10;- Alterado o tipo de retorno do decorator CurrentUser para BaseUserDto.&#10;&#10;chore(interfaces): atualizar interface de requisição de autenticação&#10;&#10;- Alterado o tipo de usuário na interface AuthRequest para BaseUserDto.&#10;&#10;feat(schemas): estender schema de professor com tipos DTO&#10;&#10;- Adicionados TeacherUserDto e tipos relacionados para maior segurança de tipos.&#10;&#10;chore(lock): atualizar pnpm lock file para novas dependências">
      <option name="closed" value="true" />
      <created>1748379604611</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1748379604611</updated>
    </task>
    <task id="LOCAL-00019" summary="feat(api): atualizar criação de usuário e atribuição de cargo nas requisições da API&#10;&#10;- Alterado o e-mail de &quot;teste3@teste.com&quot; para &quot;teste5@teste.com&quot; na requisição da API.&#10;- Atualizado o cargo do usuário de &quot;ADMIN&quot; para &quot;TEACHER&quot; e adicionado campo CPF na criação do usuário.&#10;&#10;chore(api): reorganizar dependências do pacote&#10;&#10;- Movidas as dependências @obg para uma ordem mais estruturada no package.json.&#10;- Adicionada dependência express-session para gerenciamento de sessões.&#10;&#10;refactor(auth): simplificar processo de login&#10;&#10;- Removido console.log desnecessário no método de login.&#10;- Simplificada a lógica de autenticação do usuário.&#10;&#10;fix(guards): comentar lógica de login via sessão&#10;&#10;- Comentada a chamada ao logIn no LocalAuthGuard para tornar o gerenciamento de sessão opcional.&#10;&#10;feat(users): aprimorar lógica de criação de usuários&#10;&#10;- Atualizada a lógica de criação de usuários para usar CreateBaseUserDto.&#10;- Emitido evento de criação de usuário após sucesso na criação.&#10;&#10;feat(students-service): implementar tratamento básico de eventos&#10;&#10;- Criado AppController para lidar com eventos relacionados a usuários no serviço de estudantes.&#10;- Adicionados padrões de eventos para criação e recuperação de usuários.&#10;&#10;feat(teachers-service): adicionar tratamento de eventos para ações de professores&#10;&#10;- Criado AppController para lidar com eventos relacionados a professores.&#10;- Implementados padrões de eventos para ações de professores.&#10;&#10;fix(users-service): atualizar serviço de usuários para lidar com novos DTOs&#10;&#10;- Refatorados métodos do serviço de usuários para usar CreateBaseUserDto e UpdateBaseUserDto.&#10;- Integrada comunicação via NATS no serviço de usuários.&#10;&#10;refactor(decorators): atualizar decorator de usuário atual&#10;&#10;- Alterado o tipo de retorno do decorator CurrentUser para BaseUserDto.&#10;&#10;chore(interfaces): atualizar interface de requisição de autenticação&#10;&#10;- Alterado o tipo de usuário na interface AuthRequest para BaseUserDto.&#10;&#10;feat(schemas): estender schema de professor com tipos DTO&#10;&#10;- Adicionados TeacherUserDto e tipos relacionados para maior segurança de tipos.&#10;&#10;chore(lock): atualizar pnpm lock file para novas dependências">
      <option name="closed" value="true" />
      <created>1748379659476</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1748379659476</updated>
    </task>
    <task id="LOCAL-00020" summary="feat(api): implementar operações CRUD para estudantes e professores&#10;&#10;- Criado StudentsController e TeachersController para lidar com requisições relacionadas a estudantes e professores.&#10;- Adicionados endpoints para criar, atualizar, recuperar e deletar estudantes e professores.&#10;- Adicionada validação utilizando Zod para os dados de entrada em ambos os controladores.&#10;- Integrada documentação Swagger para melhor visibilidade da API.&#10;- Atualizado app.module.ts para incluir StudentsModule e TeachersModule.&#10;- Aprimorado o tratamento de erros nos controladores para retornar os códigos de status HTTP apropriados.&#10;- Atualizados os schemas de estudantes e professores para incluir tipos de entrada sem os campos de role.&#10;- Modificado api.http para incluir os novos endpoints de criação de professores.">
      <option name="closed" value="true" />
      <created>1748544517588</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1748544517588</updated>
    </task>
    <option name="localTasksCounter" value="21" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="feat(dashboard): adicione páginas de painel para análises, escolas, configurações, alunos, professores, equipes e usuários" />
    <MESSAGE value="feat: adicionar recursos de gerenciamento escolar com tabela de dados e validação de esquema" />
    <MESSAGE value="feat: implementar CORS para permitir origens específicas e melhorar a segurança da API" />
    <MESSAGE value="feat: ajustar estado total na tabela de dados e atualizar saídas de build no Turbo" />
    <MESSAGE value="feat(schools): implementar diálogos de adição e edição de escolas com funcionalidade de importação de CSV" />
    <MESSAGE value="fix(data-table): remover aviso de variável não utilizada para estado total" />
    <MESSAGE value="refactor: atualizar importações de esquema para usar @obg/schemas e ajustar tipos relacionados" />
    <MESSAGE value="feat: adicione o arquivo .gitignore para excluir artefatos de construção, logs e arquivos de ambiente" />
    <MESSAGE value="feat: update Dockerfile to include package.json from libs and modify pnpm-workspace.yaml dependencies" />
    <MESSAGE value="fix: update zod version to 3.25.23 in pnpm-lock.yaml" />
    <MESSAGE value="feat: add authentication and user management modules with schemas and controllers" />
    <MESSAGE value="feat: adicionar biblioteca de estratégias com configuração TypeScript e importação de reflect-metadata&#10;&#10;- Criado arquivo main.ts na biblioteca de estratégias para importar 'reflect-metadata'.&#10;- Adicionado tsconfig.json com opções do compilador TypeScript, incluindo suporte a decorators e metadata.&#10;- Criado tsconfig.lib.json estendendo o tsconfig principal com configurações específicas da biblioteca.&#10;- Atualizado pnpm-lock.yaml para incluir dependências da nova biblioteca de estratégias, incluindo pacotes do NestJS e reflect-metadata.&#10;- adicionar módulos de autenticação e gerenciamento de usuários com esquemas e controladores." />
    <MESSAGE value="feat: implementar autenticação com JWT e estratégia local, incluindo validação de usuário e tratamento de solicitações" />
    <MESSAGE value="feat: autenticação parcialmente termina, JWT, Guards e Passport Strategies, proteção nos endpoints da api, decorator IsPublic para poder uma rota ser acessada externamente" />
    <MESSAGE value="feat: atualizar README.md com detalhes do projeto, tecnologias, arquitetura e instruções de configuração para OBG Plataforma" />
    <MESSAGE value="feat: adicionando comandos Prisma ao package.json para migração e implantação" />
    <MESSAGE value="fix: remove outdated Prisma version from pnpm-lock.yaml" />
    <MESSAGE value="feat: adicionar mapeamento da biblioteca core do Node.js e atualizar configurações do workspace&#10;&#10;feat: atualizar README.md com detalhes do projeto, tecnologias, arquitetura e instruções de configuração&#10;&#10;fix: corrigir requisições na api.http com valores corretos de email e role&#10;&#10;refactor: alterar UserSchemaType para BaseUserDto no controller e serviço de autenticação&#10;&#10;refactor: atualizar controller de usuários para usar os novos schemas e DTOs base&#10;&#10;feat: implementar novos schemas de usuário (admin, professor e aluno) com validação de role&#10;&#10;refactor: remover schemas antigos de aluno e professor, e consolidar schemas de usuário&#10;&#10;fix: atualizar main.ts para exportar os novos schemas e tipos de usuário&#10;&#10;chore: atualizar dependência do zod para a versão 3.25.28" />
    <MESSAGE value="feat(api): atualizar criação de usuário e atribuição de cargo nas requisições da API&#10;&#10;- Alterado o e-mail de &quot;teste3@teste.com&quot; para &quot;teste5@teste.com&quot; na requisição da API.&#10;- Atualizado o cargo do usuário de &quot;ADMIN&quot; para &quot;TEACHER&quot; e adicionado campo CPF na criação do usuário.&#10;&#10;chore(api): reorganizar dependências do pacote&#10;&#10;- Movidas as dependências @obg para uma ordem mais estruturada no package.json.&#10;- Adicionada dependência express-session para gerenciamento de sessões.&#10;&#10;refactor(auth): simplificar processo de login&#10;&#10;- Removido console.log desnecessário no método de login.&#10;- Simplificada a lógica de autenticação do usuário.&#10;&#10;fix(guards): comentar lógica de login via sessão&#10;&#10;- Comentada a chamada ao logIn no LocalAuthGuard para tornar o gerenciamento de sessão opcional.&#10;&#10;feat(users): aprimorar lógica de criação de usuários&#10;&#10;- Atualizada a lógica de criação de usuários para usar CreateBaseUserDto.&#10;- Emitido evento de criação de usuário após sucesso na criação.&#10;&#10;feat(students-service): implementar tratamento básico de eventos&#10;&#10;- Criado AppController para lidar com eventos relacionados a usuários no serviço de estudantes.&#10;- Adicionados padrões de eventos para criação e recuperação de usuários.&#10;&#10;feat(teachers-service): adicionar tratamento de eventos para ações de professores&#10;&#10;- Criado AppController para lidar com eventos relacionados a professores.&#10;- Implementados padrões de eventos para ações de professores.&#10;&#10;fix(users-service): atualizar serviço de usuários para lidar com novos DTOs&#10;&#10;- Refatorados métodos do serviço de usuários para usar CreateBaseUserDto e UpdateBaseUserDto.&#10;- Integrada comunicação via NATS no serviço de usuários.&#10;&#10;refactor(decorators): atualizar decorator de usuário atual&#10;&#10;- Alterado o tipo de retorno do decorator CurrentUser para BaseUserDto.&#10;&#10;chore(interfaces): atualizar interface de requisição de autenticação&#10;&#10;- Alterado o tipo de usuário na interface AuthRequest para BaseUserDto.&#10;&#10;feat(schemas): estender schema de professor com tipos DTO&#10;&#10;- Adicionados TeacherUserDto e tipos relacionados para maior segurança de tipos.&#10;&#10;chore(lock): atualizar pnpm lock file para novas dependências" />
    <MESSAGE value="feat(api): implementar operações CRUD para estudantes e professores&#10;&#10;- Criado StudentsController e TeachersController para lidar com requisições relacionadas a estudantes e professores.&#10;- Adicionados endpoints para criar, atualizar, recuperar e deletar estudantes e professores.&#10;- Adicionada validação utilizando Zod para os dados de entrada em ambos os controladores.&#10;- Integrada documentação Swagger para melhor visibilidade da API.&#10;- Atualizado app.module.ts para incluir StudentsModule e TeachersModule.&#10;- Aprimorado o tratamento de erros nos controladores para retornar os códigos de status HTTP apropriados.&#10;- Atualizados os schemas de estudantes e professores para incluir tipos de entrada sem os campos de role.&#10;- Modificado api.http para incluir os novos endpoints de criação de professores." />
    <option name="LAST_COMMIT_MESSAGE" value="feat(api): implementar operações CRUD para estudantes e professores&#10;&#10;- Criado StudentsController e TeachersController para lidar com requisições relacionadas a estudantes e professores.&#10;- Adicionados endpoints para criar, atualizar, recuperar e deletar estudantes e professores.&#10;- Adicionada validação utilizando Zod para os dados de entrada em ambos os controladores.&#10;- Integrada documentação Swagger para melhor visibilidade da API.&#10;- Atualizado app.module.ts para incluir StudentsModule e TeachersModule.&#10;- Aprimorado o tratamento de erros nos controladores para retornar os códigos de status HTTP apropriados.&#10;- Atualizados os schemas de estudantes e professores para incluir tipos de entrada sem os campos de role.&#10;- Modificado api.http para incluir os novos endpoints de criação de professores." />
  </component>
</project>